package net.zhuoweizhang.boardwalk.com.android.p003dx.p006io;

import net.zhuoweizhang.boardwalk.com.android.p003dx.p006io.instructions.InstructionCodec;
import net.zhuoweizhang.boardwalk.com.android.p003dx.util.Hex;

/* renamed from: net.zhuoweizhang.boardwalk.com.android.dx.io.OpcodeInfo */
public final class OpcodeInfo {
    public static final Info ADD_DOUBLE;
    public static final Info ADD_DOUBLE_2ADDR;
    public static final Info ADD_FLOAT;
    public static final Info ADD_FLOAT_2ADDR;
    public static final Info ADD_INT;
    public static final Info ADD_INT_2ADDR;
    public static final Info ADD_INT_LIT16;
    public static final Info ADD_INT_LIT8;
    public static final Info ADD_LONG;
    public static final Info ADD_LONG_2ADDR;
    public static final Info AGET;
    public static final Info AGET_BOOLEAN;
    public static final Info AGET_BYTE;
    public static final Info AGET_CHAR;
    public static final Info AGET_OBJECT;
    public static final Info AGET_SHORT;
    public static final Info AGET_WIDE;
    public static final Info AND_INT;
    public static final Info AND_INT_2ADDR;
    public static final Info AND_INT_LIT16;
    public static final Info AND_INT_LIT8;
    public static final Info AND_LONG;
    public static final Info AND_LONG_2ADDR;
    public static final Info APUT;
    public static final Info APUT_BOOLEAN;
    public static final Info APUT_BYTE;
    public static final Info APUT_CHAR;
    public static final Info APUT_OBJECT;
    public static final Info APUT_SHORT;
    public static final Info APUT_WIDE;
    public static final Info ARRAY_LENGTH;
    public static final Info CHECK_CAST;
    public static final Info CMPG_DOUBLE;
    public static final Info CMPG_FLOAT;
    public static final Info CMPL_DOUBLE;
    public static final Info CMPL_FLOAT;
    public static final Info CMP_LONG;
    public static final Info CONST;
    public static final Info CONST_16;
    public static final Info CONST_4;
    public static final Info CONST_CLASS;
    public static final Info CONST_HIGH16;
    public static final Info CONST_STRING;
    public static final Info CONST_STRING_JUMBO;
    public static final Info CONST_WIDE;
    public static final Info CONST_WIDE_16;
    public static final Info CONST_WIDE_32;
    public static final Info CONST_WIDE_HIGH16;
    public static final Info DIV_DOUBLE;
    public static final Info DIV_DOUBLE_2ADDR;
    public static final Info DIV_FLOAT;
    public static final Info DIV_FLOAT_2ADDR;
    public static final Info DIV_INT;
    public static final Info DIV_INT_2ADDR;
    public static final Info DIV_INT_LIT16;
    public static final Info DIV_INT_LIT8;
    public static final Info DIV_LONG;
    public static final Info DIV_LONG_2ADDR;
    public static final Info DOUBLE_TO_FLOAT;
    public static final Info DOUBLE_TO_INT;
    public static final Info DOUBLE_TO_LONG;
    public static final Info FILLED_NEW_ARRAY;
    public static final Info FILLED_NEW_ARRAY_RANGE;
    public static final Info FILL_ARRAY_DATA;
    public static final Info FILL_ARRAY_DATA_PAYLOAD;
    public static final Info FLOAT_TO_DOUBLE;
    public static final Info FLOAT_TO_INT;
    public static final Info FLOAT_TO_LONG;
    public static final Info GOTO;
    public static final Info GOTO_16;
    public static final Info GOTO_32;
    public static final Info IF_EQ;
    public static final Info IF_EQZ;
    public static final Info IF_GE;
    public static final Info IF_GEZ;
    public static final Info IF_GT;
    public static final Info IF_GTZ;
    public static final Info IF_LE;
    public static final Info IF_LEZ;
    public static final Info IF_LT;
    public static final Info IF_LTZ;
    public static final Info IF_NE;
    public static final Info IF_NEZ;
    public static final Info IGET;
    public static final Info IGET_BOOLEAN;
    public static final Info IGET_BYTE;
    public static final Info IGET_CHAR;
    public static final Info IGET_OBJECT;
    public static final Info IGET_SHORT;
    public static final Info IGET_WIDE;
    private static final Info[] INFO = new Info[NativeDefinitions.EV_VERSION];
    public static final Info INSTANCE_OF;
    public static final Info INT_TO_BYTE;
    public static final Info INT_TO_CHAR;
    public static final Info INT_TO_DOUBLE;
    public static final Info INT_TO_FLOAT;
    public static final Info INT_TO_LONG;
    public static final Info INT_TO_SHORT;
    public static final Info INVOKE_DIRECT;
    public static final Info INVOKE_DIRECT_RANGE;
    public static final Info INVOKE_INTERFACE;
    public static final Info INVOKE_INTERFACE_RANGE;
    public static final Info INVOKE_STATIC;
    public static final Info INVOKE_STATIC_RANGE;
    public static final Info INVOKE_SUPER;
    public static final Info INVOKE_SUPER_RANGE;
    public static final Info INVOKE_VIRTUAL;
    public static final Info INVOKE_VIRTUAL_RANGE;
    public static final Info IPUT;
    public static final Info IPUT_BOOLEAN;
    public static final Info IPUT_BYTE;
    public static final Info IPUT_CHAR;
    public static final Info IPUT_OBJECT;
    public static final Info IPUT_SHORT;
    public static final Info IPUT_WIDE;
    public static final Info LONG_TO_DOUBLE;
    public static final Info LONG_TO_FLOAT;
    public static final Info LONG_TO_INT;
    public static final Info MONITOR_ENTER;
    public static final Info MONITOR_EXIT;
    public static final Info MOVE;
    public static final Info MOVE_16;
    public static final Info MOVE_EXCEPTION;
    public static final Info MOVE_FROM16;
    public static final Info MOVE_OBJECT;
    public static final Info MOVE_OBJECT_16;
    public static final Info MOVE_OBJECT_FROM16;
    public static final Info MOVE_RESULT;
    public static final Info MOVE_RESULT_OBJECT;
    public static final Info MOVE_RESULT_WIDE;
    public static final Info MOVE_WIDE;
    public static final Info MOVE_WIDE_16;
    public static final Info MOVE_WIDE_FROM16;
    public static final Info MUL_DOUBLE;
    public static final Info MUL_DOUBLE_2ADDR;
    public static final Info MUL_FLOAT;
    public static final Info MUL_FLOAT_2ADDR;
    public static final Info MUL_INT;
    public static final Info MUL_INT_2ADDR;
    public static final Info MUL_INT_LIT16;
    public static final Info MUL_INT_LIT8;
    public static final Info MUL_LONG;
    public static final Info MUL_LONG_2ADDR;
    public static final Info NEG_DOUBLE;
    public static final Info NEG_FLOAT;
    public static final Info NEG_INT;
    public static final Info NEG_LONG;
    public static final Info NEW_ARRAY;
    public static final Info NEW_INSTANCE;
    public static final Info NOP;
    public static final Info NOT_INT;
    public static final Info NOT_LONG;
    public static final Info OR_INT;
    public static final Info OR_INT_2ADDR;
    public static final Info OR_INT_LIT16;
    public static final Info OR_INT_LIT8;
    public static final Info OR_LONG;
    public static final Info OR_LONG_2ADDR;
    public static final Info PACKED_SWITCH;
    public static final Info PACKED_SWITCH_PAYLOAD;
    public static final Info REM_DOUBLE;
    public static final Info REM_DOUBLE_2ADDR;
    public static final Info REM_FLOAT;
    public static final Info REM_FLOAT_2ADDR;
    public static final Info REM_INT;
    public static final Info REM_INT_2ADDR;
    public static final Info REM_INT_LIT16;
    public static final Info REM_INT_LIT8;
    public static final Info REM_LONG;
    public static final Info REM_LONG_2ADDR;
    public static final Info RETURN;
    public static final Info RETURN_OBJECT;
    public static final Info RETURN_VOID;
    public static final Info RETURN_WIDE;
    public static final Info RSUB_INT;
    public static final Info RSUB_INT_LIT8;
    public static final Info SGET;
    public static final Info SGET_BOOLEAN;
    public static final Info SGET_BYTE;
    public static final Info SGET_CHAR;
    public static final Info SGET_OBJECT;
    public static final Info SGET_SHORT;
    public static final Info SGET_WIDE;
    public static final Info SHL_INT;
    public static final Info SHL_INT_2ADDR;
    public static final Info SHL_INT_LIT8;
    public static final Info SHL_LONG;
    public static final Info SHL_LONG_2ADDR;
    public static final Info SHR_INT;
    public static final Info SHR_INT_2ADDR;
    public static final Info SHR_INT_LIT8;
    public static final Info SHR_LONG;
    public static final Info SHR_LONG_2ADDR;
    public static final Info SPARSE_SWITCH;
    public static final Info SPARSE_SWITCH_PAYLOAD;
    public static final Info SPECIAL_FORMAT;
    public static final Info SPUT;
    public static final Info SPUT_BOOLEAN;
    public static final Info SPUT_BYTE;
    public static final Info SPUT_CHAR;
    public static final Info SPUT_OBJECT;
    public static final Info SPUT_SHORT;
    public static final Info SPUT_WIDE;
    public static final Info SUB_DOUBLE;
    public static final Info SUB_DOUBLE_2ADDR;
    public static final Info SUB_FLOAT;
    public static final Info SUB_FLOAT_2ADDR;
    public static final Info SUB_INT;
    public static final Info SUB_INT_2ADDR;
    public static final Info SUB_LONG;
    public static final Info SUB_LONG_2ADDR;
    public static final Info THROW;
    public static final Info USHR_INT;
    public static final Info USHR_INT_2ADDR;
    public static final Info USHR_INT_LIT8;
    public static final Info USHR_LONG;
    public static final Info USHR_LONG_2ADDR;
    public static final Info XOR_INT;
    public static final Info XOR_INT_2ADDR;
    public static final Info XOR_INT_LIT16;
    public static final Info XOR_INT_LIT8;
    public static final Info XOR_LONG;
    public static final Info XOR_LONG_2ADDR;

    /* renamed from: net.zhuoweizhang.boardwalk.com.android.dx.io.OpcodeInfo$Info */
    public static class Info {
        private final InstructionCodec format;
        private final IndexType indexType;
        private final String name;
        private final int opcode;

        public Info(int i, String str, InstructionCodec instructionCodec, IndexType indexType2) {
            String str2 = str;
            InstructionCodec instructionCodec2 = instructionCodec;
            IndexType indexType3 = indexType2;
            this.opcode = i;
            this.name = str2;
            this.format = instructionCodec2;
            this.indexType = indexType3;
        }

        public InstructionCodec getFormat() {
            return this.format;
        }

        public IndexType getIndexType() {
            return this.indexType;
        }

        public String getName() {
            return this.name;
        }

        public int getOpcode() {
            return this.opcode;
        }
    }

    static {
        Info info;
        Info info2;
        Info info3;
        Info info4;
        Info info5;
        Info info6;
        Info info7;
        Info info8;
        Info info9;
        Info info10;
        Info info11;
        Info info12;
        Info info13;
        Info info14;
        Info info15;
        Info info16;
        Info info17;
        Info info18;
        Info info19;
        Info info20;
        Info info21;
        Info info22;
        Info info23;
        Info info24;
        Info info25;
        Info info26;
        Info info27;
        Info info28;
        Info info29;
        Info info30;
        Info info31;
        Info info32;
        Info info33;
        Info info34;
        Info info35;
        Info info36;
        Info info37;
        Info info38;
        Info info39;
        Info info40;
        Info info41;
        Info info42;
        Info info43;
        Info info44;
        Info info45;
        Info info46;
        Info info47;
        Info info48;
        Info info49;
        Info info50;
        Info info51;
        Info info52;
        Info info53;
        Info info54;
        Info info55;
        Info info56;
        Info info57;
        Info info58;
        Info info59;
        Info info60;
        Info info61;
        Info info62;
        Info info63;
        Info info64;
        Info info65;
        Info info66;
        Info info67;
        Info info68;
        Info info69;
        Info info70;
        Info info71;
        Info info72;
        Info info73;
        Info info74;
        Info info75;
        Info info76;
        Info info77;
        Info info78;
        Info info79;
        Info info80;
        Info info81;
        Info info82;
        Info info83;
        Info info84;
        Info info85;
        Info info86;
        Info info87;
        Info info88;
        Info info89;
        Info info90;
        Info info91;
        Info info92;
        Info info93;
        Info info94;
        Info info95;
        Info info96;
        Info info97;
        Info info98;
        Info info99;
        Info info100;
        Info info101;
        Info info102;
        Info info103;
        Info info104;
        Info info105;
        Info info106;
        Info info107;
        Info info108;
        Info info109;
        Info info110;
        Info info111;
        Info info112;
        Info info113;
        Info info114;
        Info info115;
        Info info116;
        Info info117;
        Info info118;
        Info info119;
        Info info120;
        Info info121;
        Info info122;
        Info info123;
        Info info124;
        Info info125;
        Info info126;
        Info info127;
        Info info128;
        Info info129;
        Info info130;
        Info info131;
        Info info132;
        Info info133;
        Info info134;
        Info info135;
        Info info136;
        Info info137;
        Info info138;
        Info info139;
        Info info140;
        Info info141;
        Info info142;
        Info info143;
        Info info144;
        Info info145;
        Info info146;
        Info info147;
        Info info148;
        Info info149;
        Info info150;
        Info info151;
        Info info152;
        Info info153;
        Info info154;
        Info info155;
        Info info156;
        Info info157;
        Info info158;
        Info info159;
        Info info160;
        Info info161;
        Info info162;
        Info info163;
        Info info164;
        Info info165;
        Info info166;
        Info info167;
        Info info168;
        Info info169;
        Info info170;
        Info info171;
        Info info172;
        Info info173;
        Info info174;
        Info info175;
        Info info176;
        Info info177;
        Info info178;
        Info info179;
        Info info180;
        Info info181;
        Info info182;
        Info info183;
        Info info184;
        Info info185;
        Info info186;
        Info info187;
        Info info188;
        Info info189;
        Info info190;
        Info info191;
        Info info192;
        Info info193;
        Info info194;
        Info info195;
        Info info196;
        Info info197;
        Info info198;
        Info info199;
        Info info200;
        Info info201;
        Info info202;
        Info info203;
        Info info204;
        Info info205;
        Info info206;
        Info info207;
        Info info208;
        Info info209;
        Info info210;
        Info info211;
        Info info212;
        Info info213;
        Info info214;
        Info info215;
        Info info216;
        Info info217;
        Info info218;
        Info info219;
        Info info220;
        Info info221;
        Info info222;
        Info info223 = info;
        Info info224 = new Info(-1, "<special>", InstructionCodec.FORMAT_00X, IndexType.NONE);
        SPECIAL_FORMAT = info223;
        Info info225 = info2;
        Info info226 = new Info(256, "packed-switch-payload", InstructionCodec.FORMAT_PACKED_SWITCH_PAYLOAD, IndexType.NONE);
        PACKED_SWITCH_PAYLOAD = info225;
        Info info227 = info3;
        Info info228 = new Info(512, "sparse-switch-payload", InstructionCodec.FORMAT_SPARSE_SWITCH_PAYLOAD, IndexType.NONE);
        SPARSE_SWITCH_PAYLOAD = info227;
        Info info229 = info4;
        Info info230 = new Info(768, "fill-array-data-payload", InstructionCodec.FORMAT_FILL_ARRAY_DATA_PAYLOAD, IndexType.NONE);
        FILL_ARRAY_DATA_PAYLOAD = info229;
        Info info231 = info5;
        Info info232 = new Info(0, "nop", InstructionCodec.FORMAT_10X, IndexType.NONE);
        NOP = info231;
        Info info233 = info6;
        Info info234 = new Info(1, "move", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MOVE = info233;
        Info info235 = info7;
        Info info236 = new Info(2, "move/from16", InstructionCodec.FORMAT_22X, IndexType.NONE);
        MOVE_FROM16 = info235;
        Info info237 = info8;
        Info info238 = new Info(3, "move/16", InstructionCodec.FORMAT_32X, IndexType.NONE);
        MOVE_16 = info237;
        Info info239 = info9;
        Info info240 = new Info(4, "move-wide", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MOVE_WIDE = info239;
        Info info241 = info10;
        Info info242 = new Info(5, "move-wide/from16", InstructionCodec.FORMAT_22X, IndexType.NONE);
        MOVE_WIDE_FROM16 = info241;
        Info info243 = info11;
        Info info244 = new Info(6, "move-wide/16", InstructionCodec.FORMAT_32X, IndexType.NONE);
        MOVE_WIDE_16 = info243;
        Info info245 = info12;
        Info info246 = new Info(7, "move-object", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MOVE_OBJECT = info245;
        Info info247 = info13;
        Info info248 = new Info(8, "move-object/from16", InstructionCodec.FORMAT_22X, IndexType.NONE);
        MOVE_OBJECT_FROM16 = info247;
        Info info249 = info14;
        Info info250 = new Info(9, "move-object/16", InstructionCodec.FORMAT_32X, IndexType.NONE);
        MOVE_OBJECT_16 = info249;
        Info info251 = info15;
        Info info252 = new Info(10, "move-result", InstructionCodec.FORMAT_11X, IndexType.NONE);
        MOVE_RESULT = info251;
        Info info253 = info16;
        Info info254 = new Info(11, "move-result-wide", InstructionCodec.FORMAT_11X, IndexType.NONE);
        MOVE_RESULT_WIDE = info253;
        Info info255 = info17;
        Info info256 = new Info(12, "move-result-object", InstructionCodec.FORMAT_11X, IndexType.NONE);
        MOVE_RESULT_OBJECT = info255;
        Info info257 = info18;
        Info info258 = new Info(13, "move-exception", InstructionCodec.FORMAT_11X, IndexType.NONE);
        MOVE_EXCEPTION = info257;
        Info info259 = info19;
        Info info260 = new Info(14, "return-void", InstructionCodec.FORMAT_10X, IndexType.NONE);
        RETURN_VOID = info259;
        Info info261 = info20;
        Info info262 = new Info(15, "return", InstructionCodec.FORMAT_11X, IndexType.NONE);
        RETURN = info261;
        Info info263 = info21;
        Info info264 = new Info(16, "return-wide", InstructionCodec.FORMAT_11X, IndexType.NONE);
        RETURN_WIDE = info263;
        Info info265 = info22;
        Info info266 = new Info(17, "return-object", InstructionCodec.FORMAT_11X, IndexType.NONE);
        RETURN_OBJECT = info265;
        Info info267 = info23;
        Info info268 = new Info(18, "const/4", InstructionCodec.FORMAT_11N, IndexType.NONE);
        CONST_4 = info267;
        Info info269 = info24;
        Info info270 = new Info(19, "const/16", InstructionCodec.FORMAT_21S, IndexType.NONE);
        CONST_16 = info269;
        Info info271 = info25;
        Info info272 = new Info(20, "const", InstructionCodec.FORMAT_31I, IndexType.NONE);
        CONST = info271;
        Info info273 = info26;
        Info info274 = new Info(21, "const/high16", InstructionCodec.FORMAT_21H, IndexType.NONE);
        CONST_HIGH16 = info273;
        Info info275 = info27;
        Info info276 = new Info(22, "const-wide/16", InstructionCodec.FORMAT_21S, IndexType.NONE);
        CONST_WIDE_16 = info275;
        Info info277 = info28;
        Info info278 = new Info(23, "const-wide/32", InstructionCodec.FORMAT_31I, IndexType.NONE);
        CONST_WIDE_32 = info277;
        Info info279 = info29;
        Info info280 = new Info(24, "const-wide", InstructionCodec.FORMAT_51L, IndexType.NONE);
        CONST_WIDE = info279;
        Info info281 = info30;
        Info info282 = new Info(25, "const-wide/high16", InstructionCodec.FORMAT_21H, IndexType.NONE);
        CONST_WIDE_HIGH16 = info281;
        Info info283 = info31;
        Info info284 = new Info(26, "const-string", InstructionCodec.FORMAT_21C, IndexType.STRING_REF);
        CONST_STRING = info283;
        Info info285 = info32;
        Info info286 = new Info(27, "const-string/jumbo", InstructionCodec.FORMAT_31C, IndexType.STRING_REF);
        CONST_STRING_JUMBO = info285;
        Info info287 = info33;
        Info info288 = new Info(28, "const-class", InstructionCodec.FORMAT_21C, IndexType.TYPE_REF);
        CONST_CLASS = info287;
        Info info289 = info34;
        Info info290 = new Info(29, "monitor-enter", InstructionCodec.FORMAT_11X, IndexType.NONE);
        MONITOR_ENTER = info289;
        Info info291 = info35;
        Info info292 = new Info(30, "monitor-exit", InstructionCodec.FORMAT_11X, IndexType.NONE);
        MONITOR_EXIT = info291;
        Info info293 = info36;
        Info info294 = new Info(31, "check-cast", InstructionCodec.FORMAT_21C, IndexType.TYPE_REF);
        CHECK_CAST = info293;
        Info info295 = info37;
        Info info296 = new Info(32, "instance-of", InstructionCodec.FORMAT_22C, IndexType.TYPE_REF);
        INSTANCE_OF = info295;
        Info info297 = info38;
        Info info298 = new Info(33, "array-length", InstructionCodec.FORMAT_12X, IndexType.NONE);
        ARRAY_LENGTH = info297;
        Info info299 = info39;
        Info info300 = new Info(34, "new-instance", InstructionCodec.FORMAT_21C, IndexType.TYPE_REF);
        NEW_INSTANCE = info299;
        Info info301 = info40;
        Info info302 = new Info(35, "new-array", InstructionCodec.FORMAT_22C, IndexType.TYPE_REF);
        NEW_ARRAY = info301;
        Info info303 = info41;
        Info info304 = new Info(36, "filled-new-array", InstructionCodec.FORMAT_35C, IndexType.TYPE_REF);
        FILLED_NEW_ARRAY = info303;
        Info info305 = info42;
        Info info306 = new Info(37, "filled-new-array/range", InstructionCodec.FORMAT_3RC, IndexType.TYPE_REF);
        FILLED_NEW_ARRAY_RANGE = info305;
        Info info307 = info43;
        Info info308 = new Info(38, "fill-array-data", InstructionCodec.FORMAT_31T, IndexType.NONE);
        FILL_ARRAY_DATA = info307;
        Info info309 = info44;
        Info info310 = new Info(39, "throw", InstructionCodec.FORMAT_11X, IndexType.NONE);
        THROW = info309;
        Info info311 = info45;
        Info info312 = new Info(40, "goto", InstructionCodec.FORMAT_10T, IndexType.NONE);
        GOTO = info311;
        Info info313 = info46;
        Info info314 = new Info(41, "goto/16", InstructionCodec.FORMAT_20T, IndexType.NONE);
        GOTO_16 = info313;
        Info info315 = info47;
        Info info316 = new Info(42, "goto/32", InstructionCodec.FORMAT_30T, IndexType.NONE);
        GOTO_32 = info315;
        Info info317 = info48;
        Info info318 = new Info(43, "packed-switch", InstructionCodec.FORMAT_31T, IndexType.NONE);
        PACKED_SWITCH = info317;
        Info info319 = info49;
        Info info320 = new Info(44, "sparse-switch", InstructionCodec.FORMAT_31T, IndexType.NONE);
        SPARSE_SWITCH = info319;
        Info info321 = info50;
        Info info322 = new Info(45, "cmpl-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        CMPL_FLOAT = info321;
        Info info323 = info51;
        Info info324 = new Info(46, "cmpg-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        CMPG_FLOAT = info323;
        Info info325 = info52;
        Info info326 = new Info(47, "cmpl-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        CMPL_DOUBLE = info325;
        Info info327 = info53;
        Info info328 = new Info(48, "cmpg-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        CMPG_DOUBLE = info327;
        Info info329 = info54;
        Info info330 = new Info(49, "cmp-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        CMP_LONG = info329;
        Info info331 = info55;
        Info info332 = new Info(50, "if-eq", InstructionCodec.FORMAT_22T, IndexType.NONE);
        IF_EQ = info331;
        Info info333 = info56;
        Info info334 = new Info(51, "if-ne", InstructionCodec.FORMAT_22T, IndexType.NONE);
        IF_NE = info333;
        Info info335 = info57;
        Info info336 = new Info(52, "if-lt", InstructionCodec.FORMAT_22T, IndexType.NONE);
        IF_LT = info335;
        Info info337 = info58;
        Info info338 = new Info(53, "if-ge", InstructionCodec.FORMAT_22T, IndexType.NONE);
        IF_GE = info337;
        Info info339 = info59;
        Info info340 = new Info(54, "if-gt", InstructionCodec.FORMAT_22T, IndexType.NONE);
        IF_GT = info339;
        Info info341 = info60;
        Info info342 = new Info(55, "if-le", InstructionCodec.FORMAT_22T, IndexType.NONE);
        IF_LE = info341;
        Info info343 = info61;
        Info info344 = new Info(56, "if-eqz", InstructionCodec.FORMAT_21T, IndexType.NONE);
        IF_EQZ = info343;
        Info info345 = info62;
        Info info346 = new Info(57, "if-nez", InstructionCodec.FORMAT_21T, IndexType.NONE);
        IF_NEZ = info345;
        Info info347 = info63;
        Info info348 = new Info(58, "if-ltz", InstructionCodec.FORMAT_21T, IndexType.NONE);
        IF_LTZ = info347;
        Info info349 = info64;
        Info info350 = new Info(59, "if-gez", InstructionCodec.FORMAT_21T, IndexType.NONE);
        IF_GEZ = info349;
        Info info351 = info65;
        Info info352 = new Info(60, "if-gtz", InstructionCodec.FORMAT_21T, IndexType.NONE);
        IF_GTZ = info351;
        Info info353 = info66;
        Info info354 = new Info(61, "if-lez", InstructionCodec.FORMAT_21T, IndexType.NONE);
        IF_LEZ = info353;
        Info info355 = info67;
        Info info356 = new Info(68, "aget", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET = info355;
        Info info357 = info68;
        Info info358 = new Info(69, "aget-wide", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET_WIDE = info357;
        Info info359 = info69;
        Info info360 = new Info(70, "aget-object", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET_OBJECT = info359;
        Info info361 = info70;
        Info info362 = new Info(71, "aget-boolean", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET_BOOLEAN = info361;
        Info info363 = info71;
        Info info364 = new Info(72, "aget-byte", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET_BYTE = info363;
        Info info365 = info72;
        Info info366 = new Info(73, "aget-char", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET_CHAR = info365;
        Info info367 = info73;
        Info info368 = new Info(74, "aget-short", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AGET_SHORT = info367;
        Info info369 = info74;
        Info info370 = new Info(75, "aput", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT = info369;
        Info info371 = info75;
        Info info372 = new Info(76, "aput-wide", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT_WIDE = info371;
        Info info373 = info76;
        Info info374 = new Info(77, "aput-object", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT_OBJECT = info373;
        Info info375 = info77;
        Info info376 = new Info(78, "aput-boolean", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT_BOOLEAN = info375;
        Info info377 = info78;
        Info info378 = new Info(79, "aput-byte", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT_BYTE = info377;
        Info info379 = info79;
        Info info380 = new Info(80, "aput-char", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT_CHAR = info379;
        Info info381 = info80;
        Info info382 = new Info(81, "aput-short", InstructionCodec.FORMAT_23X, IndexType.NONE);
        APUT_SHORT = info381;
        Info info383 = info81;
        Info info384 = new Info(82, "iget", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET = info383;
        Info info385 = info82;
        Info info386 = new Info(83, "iget-wide", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET_WIDE = info385;
        Info info387 = info83;
        Info info388 = new Info(84, "iget-object", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET_OBJECT = info387;
        Info info389 = info84;
        Info info390 = new Info(85, "iget-boolean", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET_BOOLEAN = info389;
        Info info391 = info85;
        Info info392 = new Info(86, "iget-byte", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET_BYTE = info391;
        Info info393 = info86;
        Info info394 = new Info(87, "iget-char", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET_CHAR = info393;
        Info info395 = info87;
        Info info396 = new Info(88, "iget-short", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IGET_SHORT = info395;
        Info info397 = info88;
        Info info398 = new Info(89, "iput", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT = info397;
        Info info399 = info89;
        Info info400 = new Info(90, "iput-wide", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT_WIDE = info399;
        Info info401 = info90;
        Info info402 = new Info(91, "iput-object", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT_OBJECT = info401;
        Info info403 = info91;
        Info info404 = new Info(92, "iput-boolean", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT_BOOLEAN = info403;
        Info info405 = info92;
        Info info406 = new Info(93, "iput-byte", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT_BYTE = info405;
        Info info407 = info93;
        Info info408 = new Info(94, "iput-char", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT_CHAR = info407;
        Info info409 = info94;
        Info info410 = new Info(95, "iput-short", InstructionCodec.FORMAT_22C, IndexType.FIELD_REF);
        IPUT_SHORT = info409;
        Info info411 = info95;
        Info info412 = new Info(96, "sget", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET = info411;
        Info info413 = info96;
        Info info414 = new Info(97, "sget-wide", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET_WIDE = info413;
        Info info415 = info97;
        Info info416 = new Info(98, "sget-object", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET_OBJECT = info415;
        Info info417 = info98;
        Info info418 = new Info(99, "sget-boolean", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET_BOOLEAN = info417;
        Info info419 = info99;
        Info info420 = new Info(100, "sget-byte", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET_BYTE = info419;
        Info info421 = info100;
        Info info422 = new Info(101, "sget-char", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET_CHAR = info421;
        Info info423 = info101;
        Info info424 = new Info(102, "sget-short", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SGET_SHORT = info423;
        Info info425 = info102;
        Info info426 = new Info(103, "sput", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT = info425;
        Info info427 = info103;
        Info info428 = new Info(104, "sput-wide", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT_WIDE = info427;
        Info info429 = info104;
        Info info430 = new Info(105, "sput-object", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT_OBJECT = info429;
        Info info431 = info105;
        Info info432 = new Info(106, "sput-boolean", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT_BOOLEAN = info431;
        Info info433 = info106;
        Info info434 = new Info(107, "sput-byte", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT_BYTE = info433;
        Info info435 = info107;
        Info info436 = new Info(108, "sput-char", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT_CHAR = info435;
        Info info437 = info108;
        Info info438 = new Info(109, "sput-short", InstructionCodec.FORMAT_21C, IndexType.FIELD_REF);
        SPUT_SHORT = info437;
        Info info439 = info109;
        Info info440 = new Info(110, "invoke-virtual", InstructionCodec.FORMAT_35C, IndexType.METHOD_REF);
        INVOKE_VIRTUAL = info439;
        Info info441 = info110;
        Info info442 = new Info(111, "invoke-super", InstructionCodec.FORMAT_35C, IndexType.METHOD_REF);
        INVOKE_SUPER = info441;
        Info info443 = info111;
        Info info444 = new Info(112, "invoke-direct", InstructionCodec.FORMAT_35C, IndexType.METHOD_REF);
        INVOKE_DIRECT = info443;
        Info info445 = info112;
        Info info446 = new Info(113, "invoke-static", InstructionCodec.FORMAT_35C, IndexType.METHOD_REF);
        INVOKE_STATIC = info445;
        Info info447 = info113;
        Info info448 = new Info(114, "invoke-interface", InstructionCodec.FORMAT_35C, IndexType.METHOD_REF);
        INVOKE_INTERFACE = info447;
        Info info449 = info114;
        Info info450 = new Info(116, "invoke-virtual/range", InstructionCodec.FORMAT_3RC, IndexType.METHOD_REF);
        INVOKE_VIRTUAL_RANGE = info449;
        Info info451 = info115;
        Info info452 = new Info(117, "invoke-super/range", InstructionCodec.FORMAT_3RC, IndexType.METHOD_REF);
        INVOKE_SUPER_RANGE = info451;
        Info info453 = info116;
        Info info454 = new Info(118, "invoke-direct/range", InstructionCodec.FORMAT_3RC, IndexType.METHOD_REF);
        INVOKE_DIRECT_RANGE = info453;
        Info info455 = info117;
        Info info456 = new Info(119, "invoke-static/range", InstructionCodec.FORMAT_3RC, IndexType.METHOD_REF);
        INVOKE_STATIC_RANGE = info455;
        Info info457 = info118;
        Info info458 = new Info(120, "invoke-interface/range", InstructionCodec.FORMAT_3RC, IndexType.METHOD_REF);
        INVOKE_INTERFACE_RANGE = info457;
        Info info459 = info119;
        Info info460 = new Info(123, "neg-int", InstructionCodec.FORMAT_12X, IndexType.NONE);
        NEG_INT = info459;
        Info info461 = info120;
        Info info462 = new Info(124, "not-int", InstructionCodec.FORMAT_12X, IndexType.NONE);
        NOT_INT = info461;
        Info info463 = info121;
        Info info464 = new Info(125, "neg-long", InstructionCodec.FORMAT_12X, IndexType.NONE);
        NEG_LONG = info463;
        Info info465 = info122;
        Info info466 = new Info(126, "not-long", InstructionCodec.FORMAT_12X, IndexType.NONE);
        NOT_LONG = info465;
        Info info467 = info123;
        Info info468 = new Info(127, "neg-float", InstructionCodec.FORMAT_12X, IndexType.NONE);
        NEG_FLOAT = info467;
        Info info469 = info124;
        Info info470 = new Info(128, "neg-double", InstructionCodec.FORMAT_12X, IndexType.NONE);
        NEG_DOUBLE = info469;
        Info info471 = info125;
        Info info472 = new Info(129, "int-to-long", InstructionCodec.FORMAT_12X, IndexType.NONE);
        INT_TO_LONG = info471;
        Info info473 = info126;
        Info info474 = new Info(130, "int-to-float", InstructionCodec.FORMAT_12X, IndexType.NONE);
        INT_TO_FLOAT = info473;
        Info info475 = info127;
        Info info476 = new Info(131, "int-to-double", InstructionCodec.FORMAT_12X, IndexType.NONE);
        INT_TO_DOUBLE = info475;
        Info info477 = info128;
        Info info478 = new Info(132, "long-to-int", InstructionCodec.FORMAT_12X, IndexType.NONE);
        LONG_TO_INT = info477;
        Info info479 = info129;
        Info info480 = new Info(133, "long-to-float", InstructionCodec.FORMAT_12X, IndexType.NONE);
        LONG_TO_FLOAT = info479;
        Info info481 = info130;
        Info info482 = new Info(134, "long-to-double", InstructionCodec.FORMAT_12X, IndexType.NONE);
        LONG_TO_DOUBLE = info481;
        Info info483 = info131;
        Info info484 = new Info(135, "float-to-int", InstructionCodec.FORMAT_12X, IndexType.NONE);
        FLOAT_TO_INT = info483;
        Info info485 = info132;
        Info info486 = new Info(136, "float-to-long", InstructionCodec.FORMAT_12X, IndexType.NONE);
        FLOAT_TO_LONG = info485;
        Info info487 = info133;
        Info info488 = new Info(137, "float-to-double", InstructionCodec.FORMAT_12X, IndexType.NONE);
        FLOAT_TO_DOUBLE = info487;
        Info info489 = info134;
        Info info490 = new Info(138, "double-to-int", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DOUBLE_TO_INT = info489;
        Info info491 = info135;
        Info info492 = new Info(139, "double-to-long", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DOUBLE_TO_LONG = info491;
        Info info493 = info136;
        Info info494 = new Info(140, "double-to-float", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DOUBLE_TO_FLOAT = info493;
        Info info495 = info137;
        Info info496 = new Info(141, "int-to-byte", InstructionCodec.FORMAT_12X, IndexType.NONE);
        INT_TO_BYTE = info495;
        Info info497 = info138;
        Info info498 = new Info(142, "int-to-char", InstructionCodec.FORMAT_12X, IndexType.NONE);
        INT_TO_CHAR = info497;
        Info info499 = info139;
        Info info500 = new Info(143, "int-to-short", InstructionCodec.FORMAT_12X, IndexType.NONE);
        INT_TO_SHORT = info499;
        Info info501 = info140;
        Info info502 = new Info(144, "add-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        ADD_INT = info501;
        Info info503 = info141;
        Info info504 = new Info(145, "sub-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SUB_INT = info503;
        Info info505 = info142;
        Info info506 = new Info(146, "mul-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        MUL_INT = info505;
        Info info507 = info143;
        Info info508 = new Info(147, "div-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        DIV_INT = info507;
        Info info509 = info144;
        Info info510 = new Info(148, "rem-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        REM_INT = info509;
        Info info511 = info145;
        Info info512 = new Info(149, "and-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AND_INT = info511;
        Info info513 = info146;
        Info info514 = new Info(150, "or-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        OR_INT = info513;
        Info info515 = info147;
        Info info516 = new Info(151, "xor-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        XOR_INT = info515;
        Info info517 = info148;
        Info info518 = new Info(152, "shl-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SHL_INT = info517;
        Info info519 = info149;
        Info info520 = new Info(153, "shr-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SHR_INT = info519;
        Info info521 = info150;
        Info info522 = new Info(154, "ushr-int", InstructionCodec.FORMAT_23X, IndexType.NONE);
        USHR_INT = info521;
        Info info523 = info151;
        Info info524 = new Info(155, "add-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        ADD_LONG = info523;
        Info info525 = info152;
        Info info526 = new Info(156, "sub-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SUB_LONG = info525;
        Info info527 = info153;
        Info info528 = new Info(157, "mul-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        MUL_LONG = info527;
        Info info529 = info154;
        Info info530 = new Info(158, "div-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        DIV_LONG = info529;
        Info info531 = info155;
        Info info532 = new Info(159, "rem-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        REM_LONG = info531;
        Info info533 = info156;
        Info info534 = new Info(160, "and-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        AND_LONG = info533;
        Info info535 = info157;
        Info info536 = new Info(161, "or-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        OR_LONG = info535;
        Info info537 = info158;
        Info info538 = new Info(162, "xor-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        XOR_LONG = info537;
        Info info539 = info159;
        Info info540 = new Info(163, "shl-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SHL_LONG = info539;
        Info info541 = info160;
        Info info542 = new Info(164, "shr-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SHR_LONG = info541;
        Info info543 = info161;
        Info info544 = new Info(165, "ushr-long", InstructionCodec.FORMAT_23X, IndexType.NONE);
        USHR_LONG = info543;
        Info info545 = info162;
        Info info546 = new Info(166, "add-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        ADD_FLOAT = info545;
        Info info547 = info163;
        Info info548 = new Info(167, "sub-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SUB_FLOAT = info547;
        Info info549 = info164;
        Info info550 = new Info(168, "mul-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        MUL_FLOAT = info549;
        Info info551 = info165;
        Info info552 = new Info(169, "div-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        DIV_FLOAT = info551;
        Info info553 = info166;
        Info info554 = new Info(170, "rem-float", InstructionCodec.FORMAT_23X, IndexType.NONE);
        REM_FLOAT = info553;
        Info info555 = info167;
        Info info556 = new Info(171, "add-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        ADD_DOUBLE = info555;
        Info info557 = info168;
        Info info558 = new Info(172, "sub-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        SUB_DOUBLE = info557;
        Info info559 = info169;
        Info info560 = new Info(173, "mul-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        MUL_DOUBLE = info559;
        Info info561 = info170;
        Info info562 = new Info(174, "div-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        DIV_DOUBLE = info561;
        Info info563 = info171;
        Info info564 = new Info(175, "rem-double", InstructionCodec.FORMAT_23X, IndexType.NONE);
        REM_DOUBLE = info563;
        Info info565 = info172;
        Info info566 = new Info(176, "add-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        ADD_INT_2ADDR = info565;
        Info info567 = info173;
        Info info568 = new Info(177, "sub-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SUB_INT_2ADDR = info567;
        Info info569 = info174;
        Info info570 = new Info(178, "mul-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MUL_INT_2ADDR = info569;
        Info info571 = info175;
        Info info572 = new Info(179, "div-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DIV_INT_2ADDR = info571;
        Info info573 = info176;
        Info info574 = new Info(180, "rem-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        REM_INT_2ADDR = info573;
        Info info575 = info177;
        Info info576 = new Info(181, "and-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        AND_INT_2ADDR = info575;
        Info info577 = info178;
        Info info578 = new Info(182, "or-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        OR_INT_2ADDR = info577;
        Info info579 = info179;
        Info info580 = new Info(183, "xor-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        XOR_INT_2ADDR = info579;
        Info info581 = info180;
        Info info582 = new Info(184, "shl-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SHL_INT_2ADDR = info581;
        Info info583 = info181;
        Info info584 = new Info(185, "shr-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SHR_INT_2ADDR = info583;
        Info info585 = info182;
        Info info586 = new Info(186, "ushr-int/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        USHR_INT_2ADDR = info585;
        Info info587 = info183;
        Info info588 = new Info(187, "add-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        ADD_LONG_2ADDR = info587;
        Info info589 = info184;
        Info info590 = new Info(188, "sub-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SUB_LONG_2ADDR = info589;
        Info info591 = info185;
        Info info592 = new Info(189, "mul-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MUL_LONG_2ADDR = info591;
        Info info593 = info186;
        Info info594 = new Info(190, "div-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DIV_LONG_2ADDR = info593;
        Info info595 = info187;
        Info info596 = new Info(191, "rem-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        REM_LONG_2ADDR = info595;
        Info info597 = info188;
        Info info598 = new Info(192, "and-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        AND_LONG_2ADDR = info597;
        Info info599 = info189;
        Info info600 = new Info(193, "or-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        OR_LONG_2ADDR = info599;
        Info info601 = info190;
        Info info602 = new Info(194, "xor-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        XOR_LONG_2ADDR = info601;
        Info info603 = info191;
        Info info604 = new Info(195, "shl-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SHL_LONG_2ADDR = info603;
        Info info605 = info192;
        Info info606 = new Info(196, "shr-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SHR_LONG_2ADDR = info605;
        Info info607 = info193;
        Info info608 = new Info(197, "ushr-long/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        USHR_LONG_2ADDR = info607;
        Info info609 = info194;
        Info info610 = new Info(198, "add-float/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        ADD_FLOAT_2ADDR = info609;
        Info info611 = info195;
        Info info612 = new Info(199, "sub-float/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SUB_FLOAT_2ADDR = info611;
        Info info613 = info196;
        Info info614 = new Info(200, "mul-float/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MUL_FLOAT_2ADDR = info613;
        Info info615 = info197;
        Info info616 = new Info(201, "div-float/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DIV_FLOAT_2ADDR = info615;
        Info info617 = info198;
        Info info618 = new Info(202, "rem-float/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        REM_FLOAT_2ADDR = info617;
        Info info619 = info199;
        Info info620 = new Info(203, "add-double/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        ADD_DOUBLE_2ADDR = info619;
        Info info621 = info200;
        Info info622 = new Info(204, "sub-double/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        SUB_DOUBLE_2ADDR = info621;
        Info info623 = info201;
        Info info624 = new Info(205, "mul-double/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        MUL_DOUBLE_2ADDR = info623;
        Info info625 = info202;
        Info info626 = new Info(206, "div-double/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        DIV_DOUBLE_2ADDR = info625;
        Info info627 = info203;
        Info info628 = new Info(207, "rem-double/2addr", InstructionCodec.FORMAT_12X, IndexType.NONE);
        REM_DOUBLE_2ADDR = info627;
        Info info629 = info204;
        Info info630 = new Info(208, "add-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        ADD_INT_LIT16 = info629;
        Info info631 = info205;
        Info info632 = new Info(209, "rsub-int", InstructionCodec.FORMAT_22S, IndexType.NONE);
        RSUB_INT = info631;
        Info info633 = info206;
        Info info634 = new Info(210, "mul-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        MUL_INT_LIT16 = info633;
        Info info635 = info207;
        Info info636 = new Info(211, "div-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        DIV_INT_LIT16 = info635;
        Info info637 = info208;
        Info info638 = new Info(212, "rem-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        REM_INT_LIT16 = info637;
        Info info639 = info209;
        Info info640 = new Info(213, "and-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        AND_INT_LIT16 = info639;
        Info info641 = info210;
        Info info642 = new Info(214, "or-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        OR_INT_LIT16 = info641;
        Info info643 = info211;
        Info info644 = new Info(215, "xor-int/lit16", InstructionCodec.FORMAT_22S, IndexType.NONE);
        XOR_INT_LIT16 = info643;
        Info info645 = info212;
        Info info646 = new Info(216, "add-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        ADD_INT_LIT8 = info645;
        Info info647 = info213;
        Info info648 = new Info(217, "rsub-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        RSUB_INT_LIT8 = info647;
        Info info649 = info214;
        Info info650 = new Info(218, "mul-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        MUL_INT_LIT8 = info649;
        Info info651 = info215;
        Info info652 = new Info(219, "div-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        DIV_INT_LIT8 = info651;
        Info info653 = info216;
        Info info654 = new Info(220, "rem-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        REM_INT_LIT8 = info653;
        Info info655 = info217;
        Info info656 = new Info(221, "and-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        AND_INT_LIT8 = info655;
        Info info657 = info218;
        Info info658 = new Info(222, "or-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        OR_INT_LIT8 = info657;
        Info info659 = info219;
        Info info660 = new Info(223, "xor-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        XOR_INT_LIT8 = info659;
        Info info661 = info220;
        Info info662 = new Info(224, "shl-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        SHL_INT_LIT8 = info661;
        Info info663 = info221;
        Info info664 = new Info(225, "shr-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        SHR_INT_LIT8 = info663;
        Info info665 = info222;
        Info info666 = new Info(226, "ushr-int/lit8", InstructionCodec.FORMAT_22B, IndexType.NONE);
        USHR_INT_LIT8 = info665;
        set(SPECIAL_FORMAT);
        set(PACKED_SWITCH_PAYLOAD);
        set(SPARSE_SWITCH_PAYLOAD);
        set(FILL_ARRAY_DATA_PAYLOAD);
        set(NOP);
        set(MOVE);
        set(MOVE_FROM16);
        set(MOVE_16);
        set(MOVE_WIDE);
        set(MOVE_WIDE_FROM16);
        set(MOVE_WIDE_16);
        set(MOVE_OBJECT);
        set(MOVE_OBJECT_FROM16);
        set(MOVE_OBJECT_16);
        set(MOVE_RESULT);
        set(MOVE_RESULT_WIDE);
        set(MOVE_RESULT_OBJECT);
        set(MOVE_EXCEPTION);
        set(RETURN_VOID);
        set(RETURN);
        set(RETURN_WIDE);
        set(RETURN_OBJECT);
        set(CONST_4);
        set(CONST_16);
        set(CONST);
        set(CONST_HIGH16);
        set(CONST_WIDE_16);
        set(CONST_WIDE_32);
        set(CONST_WIDE);
        set(CONST_WIDE_HIGH16);
        set(CONST_STRING);
        set(CONST_STRING_JUMBO);
        set(CONST_CLASS);
        set(MONITOR_ENTER);
        set(MONITOR_EXIT);
        set(CHECK_CAST);
        set(INSTANCE_OF);
        set(ARRAY_LENGTH);
        set(NEW_INSTANCE);
        set(NEW_ARRAY);
        set(FILLED_NEW_ARRAY);
        set(FILLED_NEW_ARRAY_RANGE);
        set(FILL_ARRAY_DATA);
        set(THROW);
        set(GOTO);
        set(GOTO_16);
        set(GOTO_32);
        set(PACKED_SWITCH);
        set(SPARSE_SWITCH);
        set(CMPL_FLOAT);
        set(CMPG_FLOAT);
        set(CMPL_DOUBLE);
        set(CMPG_DOUBLE);
        set(CMP_LONG);
        set(IF_EQ);
        set(IF_NE);
        set(IF_LT);
        set(IF_GE);
        set(IF_GT);
        set(IF_LE);
        set(IF_EQZ);
        set(IF_NEZ);
        set(IF_LTZ);
        set(IF_GEZ);
        set(IF_GTZ);
        set(IF_LEZ);
        set(AGET);
        set(AGET_WIDE);
        set(AGET_OBJECT);
        set(AGET_BOOLEAN);
        set(AGET_BYTE);
        set(AGET_CHAR);
        set(AGET_SHORT);
        set(APUT);
        set(APUT_WIDE);
        set(APUT_OBJECT);
        set(APUT_BOOLEAN);
        set(APUT_BYTE);
        set(APUT_CHAR);
        set(APUT_SHORT);
        set(IGET);
        set(IGET_WIDE);
        set(IGET_OBJECT);
        set(IGET_BOOLEAN);
        set(IGET_BYTE);
        set(IGET_CHAR);
        set(IGET_SHORT);
        set(IPUT);
        set(IPUT_WIDE);
        set(IPUT_OBJECT);
        set(IPUT_BOOLEAN);
        set(IPUT_BYTE);
        set(IPUT_CHAR);
        set(IPUT_SHORT);
        set(SGET);
        set(SGET_WIDE);
        set(SGET_OBJECT);
        set(SGET_BOOLEAN);
        set(SGET_BYTE);
        set(SGET_CHAR);
        set(SGET_SHORT);
        set(SPUT);
        set(SPUT_WIDE);
        set(SPUT_OBJECT);
        set(SPUT_BOOLEAN);
        set(SPUT_BYTE);
        set(SPUT_CHAR);
        set(SPUT_SHORT);
        set(INVOKE_VIRTUAL);
        set(INVOKE_SUPER);
        set(INVOKE_DIRECT);
        set(INVOKE_STATIC);
        set(INVOKE_INTERFACE);
        set(INVOKE_VIRTUAL_RANGE);
        set(INVOKE_SUPER_RANGE);
        set(INVOKE_DIRECT_RANGE);
        set(INVOKE_STATIC_RANGE);
        set(INVOKE_INTERFACE_RANGE);
        set(NEG_INT);
        set(NOT_INT);
        set(NEG_LONG);
        set(NOT_LONG);
        set(NEG_FLOAT);
        set(NEG_DOUBLE);
        set(INT_TO_LONG);
        set(INT_TO_FLOAT);
        set(INT_TO_DOUBLE);
        set(LONG_TO_INT);
        set(LONG_TO_FLOAT);
        set(LONG_TO_DOUBLE);
        set(FLOAT_TO_INT);
        set(FLOAT_TO_LONG);
        set(FLOAT_TO_DOUBLE);
        set(DOUBLE_TO_INT);
        set(DOUBLE_TO_LONG);
        set(DOUBLE_TO_FLOAT);
        set(INT_TO_BYTE);
        set(INT_TO_CHAR);
        set(INT_TO_SHORT);
        set(ADD_INT);
        set(SUB_INT);
        set(MUL_INT);
        set(DIV_INT);
        set(REM_INT);
        set(AND_INT);
        set(OR_INT);
        set(XOR_INT);
        set(SHL_INT);
        set(SHR_INT);
        set(USHR_INT);
        set(ADD_LONG);
        set(SUB_LONG);
        set(MUL_LONG);
        set(DIV_LONG);
        set(REM_LONG);
        set(AND_LONG);
        set(OR_LONG);
        set(XOR_LONG);
        set(SHL_LONG);
        set(SHR_LONG);
        set(USHR_LONG);
        set(ADD_FLOAT);
        set(SUB_FLOAT);
        set(MUL_FLOAT);
        set(DIV_FLOAT);
        set(REM_FLOAT);
        set(ADD_DOUBLE);
        set(SUB_DOUBLE);
        set(MUL_DOUBLE);
        set(DIV_DOUBLE);
        set(REM_DOUBLE);
        set(ADD_INT_2ADDR);
        set(SUB_INT_2ADDR);
        set(MUL_INT_2ADDR);
        set(DIV_INT_2ADDR);
        set(REM_INT_2ADDR);
        set(AND_INT_2ADDR);
        set(OR_INT_2ADDR);
        set(XOR_INT_2ADDR);
        set(SHL_INT_2ADDR);
        set(SHR_INT_2ADDR);
        set(USHR_INT_2ADDR);
        set(ADD_LONG_2ADDR);
        set(SUB_LONG_2ADDR);
        set(MUL_LONG_2ADDR);
        set(DIV_LONG_2ADDR);
        set(REM_LONG_2ADDR);
        set(AND_LONG_2ADDR);
        set(OR_LONG_2ADDR);
        set(XOR_LONG_2ADDR);
        set(SHL_LONG_2ADDR);
        set(SHR_LONG_2ADDR);
        set(USHR_LONG_2ADDR);
        set(ADD_FLOAT_2ADDR);
        set(SUB_FLOAT_2ADDR);
        set(MUL_FLOAT_2ADDR);
        set(DIV_FLOAT_2ADDR);
        set(REM_FLOAT_2ADDR);
        set(ADD_DOUBLE_2ADDR);
        set(SUB_DOUBLE_2ADDR);
        set(MUL_DOUBLE_2ADDR);
        set(DIV_DOUBLE_2ADDR);
        set(REM_DOUBLE_2ADDR);
        set(ADD_INT_LIT16);
        set(RSUB_INT);
        set(MUL_INT_LIT16);
        set(DIV_INT_LIT16);
        set(REM_INT_LIT16);
        set(AND_INT_LIT16);
        set(OR_INT_LIT16);
        set(XOR_INT_LIT16);
        set(ADD_INT_LIT8);
        set(RSUB_INT_LIT8);
        set(MUL_INT_LIT8);
        set(DIV_INT_LIT8);
        set(REM_INT_LIT8);
        set(AND_INT_LIT8);
        set(OR_INT_LIT8);
        set(XOR_INT_LIT8);
        set(SHL_INT_LIT8);
        set(SHR_INT_LIT8);
        set(USHR_INT_LIT8);
    }

    private OpcodeInfo() {
    }

    public static Info get(int i) {
        IllegalArgumentException illegalArgumentException;
        StringBuilder sb;
        int i2 = i;
        try {
            Info info = INFO[i2 + 1];
            if (info != null) {
                return info;
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException = e;
        }
        IllegalArgumentException illegalArgumentException2 = illegalArgumentException;
        StringBuilder sb2 = sb;
        StringBuilder sb3 = new StringBuilder();
        IllegalArgumentException illegalArgumentException3 = new IllegalArgumentException(sb2.append("bogus opcode: ").append(Hex.u2or4(i2)).toString());
        throw illegalArgumentException2;
    }

    public static InstructionCodec getFormat(int i) {
        return get(i).getFormat();
    }

    public static IndexType getIndexType(int i) {
        return get(i).getIndexType();
    }

    public static String getName(int i) {
        return get(i).getName();
    }

    private static void set(Info info) {
        Info info2 = info;
        INFO[1 + info2.getOpcode()] = info2;
    }
}
